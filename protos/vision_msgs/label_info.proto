syntax = "proto3";

package vision_msgs;

import "std_msgs/header.proto";
import "vision_msgs/vision_class.proto";

// Provides meta-information about a visual pipeline.
//
// This message serves a similar purpose to sensor_msgs/CameraInfo, but instead
//   of being tied to hardware, it represents information about a specific
//   computer vision pipeline. This information stays constant (or relatively
//   constant) over time, and so it is wasteful to send it with each individual
//   result. By listening to these messages, subscribers will receive
//   the context in which published vision messages are to be interpreted.
// Each vision pipeline should publish its LabelInfo messages to its own topic,
//   in a manner similar to CameraInfo.
// This message is meant to allow converting data from vision pipelines that
//   return id based classifications back to human readable string class names.

message LabelInfo {
  // Used for sequencing
  std_msgs.Header header = 1;

  // An array of uint16 keys and string values containing the association
  //   between class identifiers and their names. According to the amount
  //   of classes and the datatype used to store their ids internally, the
  //   maxiumum class id allowed (65535 for uint16 and 255 for uint8) belongs to
  //   the "UNLABELED" class.
  repeated vision_msgs.VisionClass class_map = 2;

  // The value between 0-1 used as confidence threshold for the inference.
  float threshold = 3;
}
