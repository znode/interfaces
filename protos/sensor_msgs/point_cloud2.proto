syntax = "proto3";

package sensor_msgs;

import "std_msgs/header.proto";
import "sensor_msgs/point_field.proto";

// This message holds a collection of N-dimensional points, which may
// contain additional information such as normals, intensity, etc. The
// point data is stored as a binary blob, its layout described by the
// contents of the "fields" array.
//
// The point cloud data may be organized 2d (image-like) or 1d (unordered).
// Point clouds organized as 2d images may be produced by camera depth sensors
// such as stereo or time-of-flight.

message PointCloud2 {
  // Time of sensor data acquisition, and the coordinate frame ID (for 3d
  // points).
  std_msgs.Header header = 1;

  // 2D structure of the point cloud. If the cloud is unordered, height is
  // 1 and width is the length of the point cloud.
  uint32 height = 2;
  uint32 width = 3;

  // Describes the channels and their layout in the binary data blob.
  repeated PointField fields = 4;

  // Is this data bigendian?
  bool is_bigendian = 5;

  // Length of a point in bytes
  uint32 point_step = 6;

  // Length of a row in bytes
  uint32 row_step = 7;

  // Actual point data, size is (row_step*height)
  bytes data = 8;

  // True if there are no invalid points
  bool is_dense = 9;
}
